
spring.application.name=arcadia

spring.web.resources.static-locations=file:/Temp/webapps/ROOT/

# watch for java
spring.devtools.livereload.enabled=true

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.show-sql=true
# spring.datasource.url=jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_DATABASE}
spring.datasource.url=jdbc:h2:arcadia:db;DB_CLOSE_DELAY=-1;MODE=MySQL
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.datasource.data=classpath:data.sql

spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true
spring.datasource.autoCommit=${AUTO_COMMIT}

# actuator
management.endpoints.web.exposure.include=*
 
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB

# logging.file.name=${LOG_FILE}

# permet de tester avec les mêmes uri pour le tomcat intégré et les tomcats de serveurs
# A ne renseigner que pour le tomcat intégré.
server.servlet.contextPath=${CONTEXT_PATH}

# Répertoire de stockage des fichiers images
server.imagesFilePath=${IMAGE_PATH}

springdoc.swagger-ui.enabled=${SWAGGER}

spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=${MAIL_USER}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
mail.smtp.auth=plain
mail.smtp.starttls.enable=true

mongodb.db=${MONGO_DB}
mongodb.url=${MONGO_URL}

application.security.jwt.secret-key=${JWT_KEY}
application.security.jwt.expiration=${JWT_EXP}
application.security.jwt.refresh-token.expiration=${JWT_EXP_REFRESH}
