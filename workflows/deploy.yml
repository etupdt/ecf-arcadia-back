name: Deploy to OVH

on:
  push:
    branches:
      - config/github

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    env:
      USER: ${{ secrets.USER }}
      PASSWORD: ${{ secrets.PASSWORD }}
      HOST: ${{ secrets.HOST }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Install SSH Client
        run: |
          echo 'toto'
          sudo apt-get update && sudo apt-get install openssh-client sshpass

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create env.properties file
        run: |
          echo "# Autogenerated env.properties file" > env.properties
          echo "DB_URL=postgres" >> env.properties
          echo "DB_PORT=5432" >> env.properties
          echo "DB_DATABASE=arcadia" >> env.properties
          echo "DB_USER=${{ secrets.DB_USER }}" >> env.properties
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> env.properties
          echo "DDL_AUTO=none" >> env.properties
          echo "CONTEXT_PATH=" >> env.properties
          echo "IMAGE_PATH=/usr/local/images/" >> env.properties
          echo "MAIL_USER=${{ secrets.MAIL_USER }}" >> env.properties
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> env.properties
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> env.properties
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> env.properties
          echo "MONGO_URL=mongodb://${{ secrets.MONGO_USER }}:${{ secrets.MONGO_PASSWORD }}@mongodb:27017/" >> env.properties
          cat env.properties
        
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: copy env file to target server
        run: |
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no env.properties ${USER}@${HOST}:./
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no -r ./postgres ${USER}@${HOST}:.
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no -r ./mongodb ${USER}@${HOST}:.
          sshpass -p $PASSWORD scp -o StrictHostKeyChecking=no ./docker-compose-back-prod.yml ${USER}@${HOST}:.

      - name: Deploy using docker-compose
        run: |
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no ${USER}@${HOST} "echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin"
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no ${USER}@${HOST} "sudo docker compose -f docker-compose-back-prod.yml pull"
          sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no ${USER}@${HOST} "sudo docker compose -f docker-compose-back-prod.yml up -d"
